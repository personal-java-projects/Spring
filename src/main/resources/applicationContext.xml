<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:p="http://www.springframework.org/schema/p"
       xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
                            http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd">

    <!-- 加载db.properties配置文件 -->
    <!-- 不配置，使用Spring新注解了，是SpringConfiguration.java -->
<!--    <context:property-placeholder location="classpath:db.properties" />-->

<!-- 无参构造方法实例化 -->
<!--    <bean id="userDao" class="com.example.dao.impl.UserDaoImpl" scope="singleton">-->
<!--        &lt;!&ndash; 依赖注入：通过set方法 注入基本类型String、int&ndash;&gt;-->
<!--        <property name="username" value="历史" />-->
<!--        <property name="age" value="10" />-->
<!--    </bean>-->

    <!-- 不配置，使用@Component注解去生成实例 -->
<!--    <bean id="userDao" class="com.example.dao.impl.UserDaoImpl" scope="singleton">-->
<!--        &lt;!&ndash; 依赖注入：通过set方法 注入基本类型List、Map、Properties &ndash;&gt;-->
<!--        <property name="strList">-->
<!--            <list>-->
<!--                <value>as</value>-->
<!--                <value>asfdsf</value>-->
<!--                <value>asdsad</value>-->
<!--            </list>-->
<!--        </property>-->

<!--        <property name="userMap">-->
<!--            <map>-->
<!--                <entry key="user1" value-ref="userPojo"></entry>-->
<!--                <entry key="user2" value-ref="userPojo1"></entry>-->
<!--            </map>-->
<!--        </property>-->

<!--        <property name="properties">-->
<!--            <props>-->
<!--                <prop key="p1">3132132</prop>-->
<!--                <prop key="p2">发空间的</prop>-->
<!--                <prop key="p2">大苏打</prop>-->
<!--            </props>-->
<!--        </property>-->
<!--    </bean>-->

    <!-- 将User这个Pojo类注册到spring容器中 -->
    <bean id="userPojo" class="com.example.pojo.User">
        <!-- 依赖注入 set方法 -->
        <property name="name" value="tom"></property>
        <property name="addr" value="发射机的"></property>
    </bean>

    <bean id="userPojo1" class="com.example.pojo.User">
        <!-- 依赖注入 set方法 -->
        <property name="name" value="tom1"></property>
        <property name="addr" value="发射范德萨机的"></property>
    </bean>

    <!-- 工厂静态方法实例化 -->
<!--    <bean id="userDao" class="com.example.factory.StaticFactory" factory-method="getUserDao"></bean>-->

    <!-- 工厂实例方法实例化 需要先实例化工厂再实例化Bean-->
<!--    <bean id="factory" class="com.example.factory.DynamicFactory"></bean>-->
<!--    <bean id="userDao" factory-bean="factory" factory-method="getUserDao"></bean>-->

    <!-- 将UserService注册进spring容器，通过spring容器创建service对象 -->
<!--    <bean id="userService" class="com.example.service.impl.UserServiceImpl">-->
<!--        &lt;!&ndash;-->
<!--    set方法实现依赖注入-->
<!--            依赖注入。这里的name是UserServiceImpl中set方法截去set后剩下部分首字母改成小写的变量名,-->
<!--            使用ref绑定对应的bean。这里ref指的是容器中对应bean的id-->
<!--        &ndash;&gt;-->
<!--        <property name="userDao" ref="userDao"></property>-->
<!--    </bean>-->

    <!-- p命名空间方式注入依赖，set方法实现依赖注入 -->
<!--    <bean id="userService" class="com.example.service.impl.UserServiceImpl" p:userDao-ref="userDao"></bean>-->

    <!-- 构造方法实现依赖注入 -->
    <!-- 不配置，使用@Component注解去生成实例 -->
<!--    <bean id="userService" class="com.example.service.impl.UserServiceImpl">-->
<!--        &lt;!&ndash; 这里的name是UserServiceImpl构造函数的参数名 &ndash;&gt;-->
<!--        <constructor-arg name="userDao" ref="userDao"></constructor-arg>-->
<!--    </bean>-->

    <!-- 配置组件扫描，告诉spring在哪个包下面的Bean需要扫描，从而扫到对应的注解，帮助创建对象 -->
    <!-- 不配置，使用Spring新注解了 -->
<!--    <context:component-scan base-package="com.example"></context:component-scan>-->

    <!-- 创建c3p0 数据源对象 -->
    <!-- 不配置，使用Spring新注解了 -->
<!--    <bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource">-->
<!--        <property name="driverClass" value="com.mysql.jdbc.Driver"></property>-->
<!--        <property name="jdbcUrl" value="jdbc:mysql://localhost:3306/test"></property>-->
<!--        <property name="user" value="root"></property>-->
<!--        <property name="password" value="root"></property>-->
<!--    </bean>-->
<!--    <bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource">-->
<!--        <property name="driverClass" value="${db.driver}"></property>-->
<!--        <property name="jdbcUrl" value="${db.url}"></property>-->
<!--        <property name="user" value="${db.username}"></property>-->
<!--        <property name="password" value="${db.password}"></property>-->
<!--    </bean>-->

    <!-- 创建druid 数据源对象 -->
<!--    <bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource">-->
<!--        <property name="driverClassName" value="com.mysql.jdbc.Driver"></property>-->
<!--        <property name="url" value="jdbc:mysql://localhost:3306/test"></property>-->
<!--        <property name="username" value="root"></property>-->
<!--        <property name="password" value="root"></property>-->
<!--    </bean>-->

    <!-- 引入其他applicationContext配置文件 -->
    <import resource="applicationContext-user.xml" />
    <import resource="applicationContext-product.xml" />
</beans>